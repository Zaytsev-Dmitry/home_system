version: '3'
services:
  auth-backend:
    build:
      context: authBackend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      MODE: docker
    restart: unless-stopped
    depends_on:
      - keycloak
      - postgres_server
    networks:
      - skynet

  note-backend-app:
    build:
      context: noteBackend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      MODE: dev
    restart: unless-stopped
    networks:
      - skynet
    depends_on:
      - postgres_server
      - keycloak

  postgres_server:
    container_name: postgresServer
    restart: always
    image: postgres:14
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: auth
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - skynet
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/create-realm.json
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--import-realm", "--http-port", "7080", "--https-port", "7443" ]
    ports:
      - "7080:7080"
      - "7443:7443"
    volumes:
      - ./data/keycloak/create-realm.json:/opt/keycloak/data/import/create-realm.json
    networks:
      - skynet
    depends_on:
      - postgres_server

networks:
  skynet: